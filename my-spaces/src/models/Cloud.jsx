/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import * as THREE from "three";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

// type GLTFResult = GLTF & {
//   nodes: {
//     pCube5_clouds: THREE.Mesh;
//     clouds_pCube3: THREE.Mesh;
//     clouds_pCube4: THREE.Mesh;
//   }
//   materials: {
//     aiStandardSurface1SG: THREE.MeshStandardMaterial;
//   };
// };

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Cloud-1605495504/cloud.glb";

export default function Model(props) {
  const { num = 1 } = props;

  const group = useRef();
  const { nodes, materials } = useGLTF(FILE_URL);

  materials.aiStandardSurface1SG.transparent = true;
  materials.aiStandardSurface1SG.opacity = 0.9;
  materials.aiStandardSurface1SG.side = THREE.DoubleSide;

  return (
    <group>
      <group ref={group} {...props}>
        <group name="AuxScene" scale={[0.05, 0.05, 0.05]}>
          <group>
            {num == 1 && (
              <mesh
                material={materials.aiStandardSurface1SG}
                geometry={nodes.pCube5_clouds.geometry}
                name="pCube5_clouds"
              />
            )}
            {num == 2 && (
              <mesh
                material={materials.aiStandardSurface1SG}
                geometry={nodes.clouds_pCube3.geometry}
                name="clouds_pCube3"
              />
            )}
            {num == 3 && (
              <mesh
                material={materials.aiStandardSurface1SG}
                geometry={nodes.clouds_pCube4.geometry}
                name="clouds_pCube4"
              />
            )}
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
