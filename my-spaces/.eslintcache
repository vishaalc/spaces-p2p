[{"/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/index.js":"1","/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/App.js":"2","/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/reportWebVitals.js":"3","/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/components/Mountain.jsx":"4","/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/shaders/crazy.js":"5"},{"size":500,"mtime":1606449143185,"results":"6","hashOfConfig":"7"},{"size":1237,"mtime":1606449839630,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606449143187,"results":"9","hashOfConfig":"7"},{"size":2996,"mtime":1606449645136,"results":"10","hashOfConfig":"7"},{"size":6390,"mtime":1606449775200,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nh1x2i",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/index.js",[],"/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/App.js",["23","24"],"/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/reportWebVitals.js",[],"/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/components/Mountain.jsx",["25","26","27","28","29"],"import React, { useEffect } from \"react\";\nimport SimplexNoise from \"simplex-noise\";\nimport { BufferGeometry, PlaneBufferGeometry } from \"three\";\nimport CrazyMaterial from \"../shaders/crazy\";\nimport { useFrame } from \"react-three-fiber\";\n\nconst RESOLUTION = 3;\nconst GRADUAL_INCLINE = 0.25;\nconst SMOOTHNESS = 20;\nconst WIDTH = 250;\nconst HEIGHT = 250;\nconst TALL = 60;\n\nconst Mountain = () => {\n  const material = React.useRef(new CrazyMaterial());\n  const material1 = React.useRef(new CrazyMaterial());\n  const hillRef = React.useRef();\n  const simplex = React.useMemo(() => new SimplexNoise(), []);\n  const hillGeo = React.useMemo(() => {\n    const hillBufferGeo = new PlaneBufferGeometry(\n      WIDTH,\n      HEIGHT,\n      WIDTH * RESOLUTION,\n      HEIGHT * RESOLUTION\n    );\n\n    const vertices = hillBufferGeo.attributes.position.array;\n    const count = hillBufferGeo.attributes.position.count;\n\n    const inclineX = GRADUAL_INCLINE * WIDTH;\n    const inclineY = GRADUAL_INCLINE * HEIGHT;\n    const MAX_DIST = WIDTH / 2;\n\n    for (let i = 0; i < count; i++) {\n      const x = vertices[i * 3];\n      const y = vertices[i * 3 + 1];\n\n      const distToCenter = Math.sqrt(x * x + y * y) / MAX_DIST;\n\n      let newZ = 0;\n      if (distToCenter < 0.6) {\n        let locDistToCenter = (distToCenter - 0.08) / (0.6 - 0.08); // 1 at the outside\n        locDistToCenter = 1 - locDistToCenter;\n        const mult = Math.pow(locDistToCenter, 1.5);\n        newZ = TALL;\n        newZ *= mult;\n        // newZ += 4 * simplex.noise2D(x / SMOOTHNESS, y / SMOOTHNESS);\n        newZ +=\n          1 *\n          simplex.noise2D(\n            (x + 5000) / (SMOOTHNESS * 0.7),\n            (y + 5000) / (SMOOTHNESS * 0.7)\n          );\n        newZ +=\n          0.5 *\n          simplex.noise2D((x + 10000) / SMOOTHNESS, (y + 10000) / SMOOTHNESS);\n        newZ = Math.min(newZ, TALL);\n      } else {\n        let locDistFromSides = (distToCenter - 0.6) / 0.4;\n        // locDistFromSides = Math.abs(2 * (locDistFromSides - 0.5));\n        newZ =\n          4 * simplex.noise2D(x / (SMOOTHNESS * 0.5), y / (SMOOTHNESS * 0.5));\n        newZ *= 1 - locDistFromSides;\n      }\n\n      hillBufferGeo.attributes.position.setZ(i, newZ);\n    }\n\n    return hillBufferGeo;\n  }, []);\n\n  useFrame(({ clock }, delta) => {\n    if (material?.current) {\n      // @ts-ignore\n      material.current.time += delta;\n    }\n  });\n\n  if (material.current) {\n    material.current.fog = true;\n  }\n\n  if (material1.current) {\n    material1.current.fog = true;\n  }\n\n  return (\n    <group position-y={-TALL - 0.01}>\n      {hillGeo && (\n        <mesh\n          ref={hillRef}\n          rotation-x={-Math.PI / 2}\n          geometry={hillGeo}\n          position-y={-0.01}\n          material={material.current}\n        />\n      )}\n      <mesh\n        position-y={0}\n        rotation-x={-Math.PI / 2}\n        material={material1.current}\n      >\n        <planeBufferGeometry args={[800, 800]} />\n      </mesh>\n    </group>\n  );\n};\n\nexport default Mountain;\n","/Users/vishaal/Documents/Projects/spaces-p2p/my-spaces/src/shaders/crazy.js",["30","31"],{"ruleId":"32","severity":1,"message":"33","line":2,"column":10,"nodeType":"34","messageId":"35","endLine":2,"endColumn":15},{"ruleId":"32","severity":1,"message":"36","line":7,"column":3,"nodeType":"34","messageId":"35","endLine":7,"endColumn":15},{"ruleId":"32","severity":1,"message":"37","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},{"ruleId":"32","severity":1,"message":"38","line":3,"column":10,"nodeType":"34","messageId":"35","endLine":3,"endColumn":24},{"ruleId":"32","severity":1,"message":"39","line":30,"column":11,"nodeType":"34","messageId":"35","endLine":30,"endColumn":19},{"ruleId":"32","severity":1,"message":"40","line":31,"column":11,"nodeType":"34","messageId":"35","endLine":31,"endColumn":19},{"ruleId":"41","severity":1,"message":"42","line":70,"column":6,"nodeType":"43","endLine":70,"endColumn":8,"suggestions":"44"},{"ruleId":"32","severity":1,"message":"45","line":1,"column":26,"nodeType":"34","messageId":"35","endLine":1,"endColumn":33},{"ruleId":"32","severity":1,"message":"46","line":1,"column":35,"nodeType":"34","messageId":"35","endLine":1,"endColumn":42},"no-unused-vars","'Color' is defined but never used.","Identifier","unusedVar","'Interactable' is defined but never used.","'useEffect' is defined but never used.","'BufferGeometry' is defined but never used.","'inclineX' is assigned a value but never used.","'inclineY' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'simplex'. Either include it or remove the dependency array.","ArrayExpression",["47"],"'Vector3' is defined but never used.","'Vector4' is defined but never used.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [simplex]",{"range":"50","text":"51"},[2241,2243],"[simplex]"]